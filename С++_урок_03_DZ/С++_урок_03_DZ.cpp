#include <iostream>
#include <initializer_list>
#include <vector>
#include "SetOfIntegers.h"
using namespace std;

//6.1.Создать класс «множество целых чисел»
//Множество — это одно из самых базовых понятий в математике.
//Множество представляет собой набор каких - либо
//объектов, которые называются элементами множества.
//Как правило, каждый элемент в множестве встречается
//только один раз, и эти элементы не упорядочены.
//Часто множество определяется просто перечислением его элементов.
//Множество целых чисел A может быть задано, например, так:
//          A = { 3, 8, 46, 5, 11 }
//А другое множество целых чисел B может быть задано, например, так :
//          B = { 18, 8, 90, 11, 2 }
//Множество — это набор элементов, коллекция.Другими представителями коллекций в С++ являются массивы, векторы, стеки.
//У множества, как и у других видов коллекций, есть свой набор операций.
//	К таким операциям относятся :
//■ добавление и удаление элементов в множество 
//{ 3, 8, 46, 5, 11 } + 4 = { 3, 8, 46, 5, 11, 4 }
//{ 3, 8, 46, 5, 11 } + 3 = { 3, 8, 46, 5, 11 } —(элементы множества не повторяются!);
//■ сравнение множеств(множества равны, если они содержат одинаковый набор элементов);
//■ специальные операции с множествами :
//▷ объединение множеств(математическое обозначение : A U B),
//{ 3, 8, 46, 5, 11 } { 18, 8, 90, 11, 2 } = { 3, 8, 46, 5, 11, 18, 90, 2 }(все элементы A + все элементы B),
//▷ пересечение множеств(математическое обозначение : A B)
//{	3, 8, 46, 5, 11} { 18, 8, 90, 11, 2 } = { 8, 11 }
//(элементы, которые содержатся и в A, и в B),
//▷ разность множеств(математическое обозначение :	A \ B)
//{3, 8, 46, 5, 11} \ {18, 8, 90, 11, 2} = { 3, 46, 5 }
//(элементы, которые содержатся в A, но не содержатся в B),
//В создаваемом классе «Множество целых чисел» :
//■ элементы множества хранить в динамическом массиве;
//■ каждый элемент множества уникален(элементы не повторяются);
//■ элементы не упорядочены.
//		Реализовать методы :
//■ конструкторы(по умолчанию, с параметрами, копирования);
//■ деструктор;
//■ проверка принадлежности элемента множеству.
//		Реализовать операции :
//■ добавление элемента в множество(+, +=);
//■ объединение двух множеств(+, +=);
//■ удаление элемента(-, -=);
//■ разность множеств(-, -=);
//■ пересечение множеств(*, *=);
//■ присваивание(= );
//■ сравнения множеств(== );
//■ потоковый вывод и ввод(<< , >> ).


int main()
{
	system("chcp 1251");

	SetOfIntegers set1 = {1,2,4,9,8,11,16};
	SetOfIntegers set2={1,2,9,4,5,11};
	SetOfIntegers set3;
	SetOfIntegers set_For_Testing_Copy(set2);

	//set1.Comparison_Of_Sets(set2) ? cout<< "Равны" : cout<<"Не равны";
	//set1.PrintSet();
	//set1.Add_Element(2);	
	//set1.Add_Element(99);
	//cout << "\n\n";
	//set1.Remove_Element(2);
	//cout << "\n\n";
	//set1.PrintSet();
	//cout << "\n\n";
	//set1.Union_Of_Sets(set2);
	//set1.PrintSet();
	//set3.Intersection_Of_Sets(set1, set2);
	//set3.PrintSet();
	//set3.Difference_Of_Sets(set1, set2);
	//set3.PrintSet();
	//set_For_Testing_Copy.PrintSet();
	//set1.Membership_Element(46) ? cout << "Присутствует" : cout << "Не присутствует";
	


	/*set2.PrintSet();
	cout << "\n\n";
	set2.PrintSet();*/
	//vector<int>perviy{ 1,2,5,4,7,5,4 };
	//cout << "\n\nPervit";
	//for (int n : perviy) {
	//	cout << n << "  ";
	//}
	//vector<int>vtoroy;
	//cout << "\n\nVtoroy before copy:\n";
	//for (int n : vtoroy) {
	//	cout << n << "  ";
	//}
	//vtoroy = perviy;
	//cout << "\n\nVtoroy after copy:\n";
	//for (int n : vtoroy) {
	//	cout << n << "  ";
	//}
}